{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pavan\\\\React Project\\\\text\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      document.body.style.color = 'white';\n      showAlert(\"Greymode has been Enable\", \"success\"); // document.title = 'Textutils - Dark Mode';\n      // setInterval(() => {\n      // document.title = 'Textutils is amazing mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = ' Install Textutils Now';\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'White';\n      showAlert(\"Whitemode has been Enable\", \"sucess\"); // document.title = 'Textutils - Light Mode';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"textutils\",\n        Abouttext: \"about\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \" Try Textutils - Word Counter, Character Counter, Remove extra spacing\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Alert","About","Navbar","TextForm","BrowserRouter","Router","Routes","Route","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","color"],"sources":["D:/Pavan/React Project/text/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'grey';\n      document.body.style.color = 'white';\n\n      showAlert(\"Greymode has been Enable\", \"success\")\n      // document.title = 'Textutils - Dark Mode';\n      // setInterval(() => {\n      // document.title = 'Textutils is amazing mode';\n\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = ' Install Textutils Now';\n\n      // }, 1500);\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'White';\n      showAlert(\"Whitemode has been Enable\", \"sucess\")\n      // document.title = 'Textutils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"textutils\" Abouttext=\"about\" mode={mode} toggleMode={toggleMode}></Navbar>\n        <Alert alert={alert}></Alert>\n        <div className=\"container my-3\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode}></About>}></Route>\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\" Try Textutils - Word Counter, Character Counter, Remove extra spacing\" mode={mode}></TextForm>} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\n\nexport default App;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;;;;AAMA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,OAAD,CAAhC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMc,SAAS,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;IACnCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OADE;MAEPC,IAAI,EAAEA;IAFC,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAD,CAAR;IACD,CAFS,EAEP,IAFO,CAAV;EAGD,CARD;;EAUA,MAAMM,UAAU,GAAG,MAAM;IACvB,IAAIT,IAAI,KAAK,OAAb,EAAsB;MACpBC,OAAO,CAAC,MAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;MACAH,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,KAApB,GAA4B,OAA5B;MAEAV,SAAS,CAAC,0BAAD,EAA6B,SAA7B,CAAT,CALoB,CAMpB;MACA;MACA;MAEA;MACA;MACA;MAEA;IACD,CAfD,MAgBK;MACHH,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAT,SAAS,CAAC,2BAAD,EAA8B,QAA9B,CAAT,CAHG,CAIH;IACD;EACF,CAvBD;;EAyBA,oBACE;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,MAAD;QAAQ,KAAK,EAAC,WAAd;QAA0B,SAAS,EAAC,OAApC;QAA4C,IAAI,EAAEJ,IAAlD;QAAwD,UAAU,EAAES;MAApE;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,KAAK,EAAEP;MAAd;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACE,QAAC,MAAD;UAAA,wBACE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,QAAlB;YAA2B,OAAO,eAAE,QAAC,KAAD;cAAO,IAAI,EAAEF;YAAb;cAAA;cAAA;cAAA;YAAA;UAApC;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,GAAlB;YAAsB,OAAO,eAAE,QAAC,QAAD;cAAU,SAAS,EAAEI,SAArB;cAAgC,OAAO,EAAC,wEAAxC;cAAiH,IAAI,EAAEJ;YAAvH;cAAA;cAAA;cAAA;YAAA;UAA/B;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAcD;;GArDQD,G;;KAAAA,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}